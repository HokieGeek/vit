#!/bin/bash

while (( $# > 0 )); do
    case $1 in
    stash)
        vimargs+=('--cmd' 'let w:vit_standalone=1')
        vimargs+=('--cmd' 'cd '$PWD)
        vimargs+=('-c' 'Git stash view')
        ;;
    blame|log) vimargs+=('-c' 'Git '$1) ;;
    -h|--help) echo "USAGE: ${0##*/} [-h|--help] [blame|log|stash] [file]"; exit ;;
    k) ;; ## standalone :)
    *) args+=("$1") ;;
    esac
    shift
done

if (( ${#vimargs[*]} == 0 )); then
    vimargs+=('--cmd' 'let w:vit_standalone=1')
    vimargs+=('-c' 'Git log')
    vimargs+=('-c' 'Git status')
    vimargs+=('-c' 'wincmd t')
    (( ${#args[*]} == 0 )) && vimargs+=('--cmd' 'cd '$PWD)
elif [[ ${vimargs[*]} =~ "blame" ]] && (( ${#args[*]} == 0 )); then
    echo "ERROR: You must choose a file when using the blame command"
    exit 2
fi

if [[ ${args[0]} == "--all" ]]; then
    vimargs=("${vimargs[@]/log/log --all}")
    args=()
fi

(( ${#args[*]} > 0 )) && {
    origdir=$PWD
    filedir=${1%/*}
    cd ${filedir:-$PWD}
}

git rev-parse --is-inside-work-tree >/dev/null 2>&1 || {
    echo "Could not find a git working tree" >&2
    exit 1
}

[[ -z "${origdir+x}" ]] || cd ${origdir}

me=${0##*/}
set -x
exec ${me/vit/}vim "${args[@]}" "${vimargs[@]}"
